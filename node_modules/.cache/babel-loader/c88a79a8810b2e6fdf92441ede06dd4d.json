{"ast":null,"code":"import _objectSpread from\"/Users/raghav/Desktop/Alfa test/Intern project Alfa/alfa-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/raghav/Desktop/Alfa test/Intern project Alfa/alfa-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useMemo,useState}from'react';import'./Leaderboard.css';import{useTable,useSortBy,useGlobalFilter}from'react-table';import{COLUMNS}from'./Columns';import{GlobalFilter}from'./GlobalFilter';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Leaderboard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),studentData=_useState2[0],setStudentData=_useState2[1];useEffect(function(){fetch('/get_data').then(function(response){if(response.ok){return response.json();}}).then(function(data){return setStudentData(data);});},[]);var columns=useMemo(function(){return COLUMNS;},[]);var data=useMemo(function(){return studentData;},[studentData]);console.log(\"test\");console.log(studentData);var tableInstance=useTable({columns:columns,data:data},useGlobalFilter,useSortBy);var getTableProps=tableInstance.getTableProps,getTableBodyProps=tableInstance.getTableBodyProps,headerGroups=tableInstance.headerGroups,rows=tableInstance.rows,prepareRow=tableInstance.prepareRow,state=tableInstance.state,setGlobalFilter=tableInstance.setGlobalFilter;var globalFilter=state.globalFilter;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalFilter,{filter:globalFilter,setFilter:setGlobalFilter}),/*#__PURE__*/_jsx(\"div\",{className:\"leaderboard\",children:/*#__PURE__*/_jsxs(\"table\",_objectSpread(_objectSpread({},getTableProps()),{},{children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/_jsxs(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps(column.getSortByToggleProps())),{},{children:[column.render('Header'),/*#__PURE__*/_jsx(\"span\",{children:column.isSorted?column.isSortedDesc?'  v':'  ^':''})]}));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows.map(function(row){prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{children:row.cells.map(function(cell){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({},cell.getCellProps()),{},{children:cell.render('Cell')}));})}));})}))]}))})]});}export default Leaderboard;","map":{"version":3,"sources":["/Users/raghav/Desktop/Alfa test/Intern project Alfa/alfa-frontend/src/Leaderboard.js"],"names":["React","useEffect","useMemo","useState","useTable","useSortBy","useGlobalFilter","COLUMNS","GlobalFilter","Leaderboard","studentData","setStudentData","fetch","then","response","ok","json","data","columns","console","log","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport './Leaderboard.css';\nimport { useTable, useSortBy, useGlobalFilter } from 'react-table';\nimport { COLUMNS } from './Columns';\nimport { GlobalFilter } from './GlobalFilter';\n\n\nfunction Leaderboard() {\n\n    const [studentData, setStudentData] = useState([])\n    \n\n    useEffect(() => {\n        fetch('/get_data').then(response => {\n            if(response.ok) {\n                return response.json()\n            }\n        }).then(data => setStudentData(data))\n    }, [])\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => studentData, [studentData]);\n    console.log(\"test\")\n    console.log(studentData)\n\n    const tableInstance = useTable({\n        columns,\n        data\n    }, useGlobalFilter, useSortBy)\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, state, setGlobalFilter } = tableInstance\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n        <div className=\"leaderboard\">\n            <table {...getTableProps()}>\n                <thead>\n                    {\n                        headerGroups.map(headerGroup => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render('Header')}\n                                            <span>\n                                                {\n                                                    column.isSorted ? (column.isSortedDesc ? '  v' : '  ^' ) : ''\n                                                }\n                                            </span>\n                                        </th>\n                                    ) )\n                                }\n                            </tr>\n                        ) )\n                    }\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map(row => {\n                            prepareRow(row)\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map(cell => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n                </table>\n        </div>\n        </>\n    )\n}\n\nexport default Leaderboard;\n"]},"metadata":{},"sourceType":"module"}